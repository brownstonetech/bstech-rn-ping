{"version":3,"sources":["../src/BSTPing.ts"],"names":["eventType","BSTPing","NativeModules","eventEmitter","NativeEventEmitter","registerListener","listener","addListener","startAsync","domainName","params","options","stopAsync"],"mappings":"+TAAA,yCAEA,GAAMA,CAAAA,SAAS,CAAG,WAAlB,CAEA,GAAMC,CAAAA,OAAO,CAAGC,2BAAcD,OAA9B,CACA,GAAME,CAAAA,YAAY,CAAG,GAAIC,gCAAJ,CAAuBH,OAAvB,CAArB,CAgCO,QAASI,CAAAA,gBAAT,CAA0BC,QAA1B,CAAoF,CACvF,MAAOH,CAAAA,YAAY,CAACI,WAAb,CAAyBP,SAAzB,CAAoCM,QAApC,CAAP,CACH,CAOM,QAAeE,CAAAA,UAAf,CACLC,UADK,CAELC,MAFK,CAGLC,OAHK,yKAKCV,OAAO,CAACO,UAAR,CAAmBC,UAAnB,CAA+BC,MAA/B,CAAuCC,OAAvC,CALD,gDAQA,QAAeC,CAAAA,SAAf,6KACCX,OAAO,CAACW,SAAR,EADD","sourcesContent":["import {NativeModules, NativeEventEmitter, EmitterSubscription} from 'react-native';\n\nconst eventType = '@BST/PING';\n\nconst BSTPing = NativeModules.BSTPing;\nconst eventEmitter = new NativeEventEmitter(BSTPing);\n\nexport type PingEvents = 'ICMP_PACKET' | 'STATISTIC' | 'SUMMARY' | 'UNKNOWN';\nexport type AllEvents = PingEvents | ('E_RUNTIME_EXCEPTION' | 'E_INVALID_PARAM' | 'PING_START' | 'PING_END');\n\nexport type ICMPPacket = {\n  icmpSeq: number;\n  ttl: number;\n  time: number;\n};\n\nexport type PingStatistic = {\n  min: number;\n  avg: number;\n  max: number;\n  mdev: number;\n};\n\nexport type PingSummary = {\n  transmitted: number;\n  received: number;\n  lostPercentage: number;\n};\n\nexport type PingEvent = {\n  type: AllEvents;\n  raw?: string;\n  icmpPacket?: ICMPPacket;\n  statistic?: PingStatistic;\n  summary?: PingSummary;\n};\n\nexport function registerListener(listener: (event: PingEvent) => any): EmitterSubscription {\n    return eventEmitter.addListener(eventType, listener);\n}\n\nexport type PingParams = {\n  durationSeconds?: number;\n  reportIntervalSeconds?: number;\n};\n\nexport async function startAsync(\n  domainName: string,\n  params?: PingParams,\n  options?: {[name: string]: string},\n): Promise<void> {\n  await BSTPing.startAsync(domainName, params, options);\n}\n\nexport async function stopAsync(): Promise<void> {\n  await BSTPing.stopAsync();\n}\n"],"file":"BSTPing.js"}